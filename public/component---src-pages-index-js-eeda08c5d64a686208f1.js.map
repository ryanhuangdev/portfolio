{"version":3,"sources":["webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/Hero.js","webpack:///./src/constants/services.js","webpack:///./src/components/Services.js","webpack:///./src/components/Jobs.js","webpack:///./src/pages/index.js","webpack:///./src/components/Blog.js","webpack:///./src/components/Blogs.js"],"names":["Project","description","title","github","stack","url","image","index","className","fluid","childImageSharp","map","item","key","id","href","Projects","projects","showLink","Title","project","to","Hero","file","icon","text","Services","services","service","Jobs","jobs","allStrapiJobs","nodes","useState","value","setValue","company","position","date","desc","job","strapiId","onClick","name","query","data","allStrapiProjects","blogs","allStrapiBlogs","Layout","SEO","Blogs","Blog","slug","blog"],"mappings":"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","file":"component---src-pages-index-js-eeda08c5d64a686208f1.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Image from \"gatsby-image\";\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\";\nconst Project = ({ description, title, github, stack, url, image, index }) => {\n  return (\n    <article className=\"project\">\n      <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />\n      <div className=\"project-info\">\n        <span className=\"project-number\">0{index + 1}.</span>\n        <h3>{title}</h3>\n        <p className=\"project-desc\">{description}</p>\n        <div className=\"project-stack\">\n          {stack.map((item) => {\n            return <span key={item.id}>{item.title}</span>;\n          })}\n        </div>\n        <div className=\"project-links\">\n          <a href={github}>\n            <FaGithubSquare className='project-icon' />\n          </a>\n          <a href={url}>\n            <FaShareSquare className='project-icon' />\n          </a>\n        </div>\n      </div>\n    </article>\n  );\n};\n\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  github: PropTypes.string.isRequired,\n  stack: PropTypes.arrayOf(PropTypes.object).isRequired,\n  url: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired\n};\n\nexport default Project;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Title from \"./Title\";\nimport Project from \"./Project\";\nimport { Link } from \"gatsby\";\n\nconst Projects = ({ projects, title, showLink }) => {\n  return (\n    <section className=\"section projects\">\n      <Title title={title} />\n      <div className=\"section-center projects-center\">\n        {projects.map((project, index) => {\n          return <Project key={project.id} index={index} {...project} />\n        })}\n      </div>\n      {showLink && (\n        <Link to=\"/projects\" className=\"btn center-btn\">\n          Projects\n        </Link>\n      )}\n    </section>\n  );\n};\n\nProjects.propTypes = {\n  projects: PropTypes.arrayOf(PropTypes.object).isRequired,\n  title: PropTypes.string.isRequired,\n  showLink: PropTypes.bool.isRequired\n};\n\nexport default Projects;\n","import React from \"react\";\nimport Image from \"gatsby-image\";\nimport { Link } from \"gatsby\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport SocialLinks from \"../constants/socialLinks\";\n\nconst query = graphql`\n  {\n    file(relativePath: { eq: \"profile.jpg\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`;\n\nconst Hero = () => {\n  const {\n    file: {\n      childImageSharp: { fluid },\n    },\n  } = useStaticQuery(query);\n\n  return (\n    <header className=\"hero\">\n      <div className=\"section-center hero-center\">\n        <article className=\"hero-info\">\n          <div>\n            <div className=\"underline\"></div>\n            <h1>I'm Ryan</h1>\n            <h4>Web developer</h4>\n            <Link to=\"/contact\" className=\"btn\">\n              Contact me\n            </Link>\n            <SocialLinks />\n          </div>\n        </article>\n        <Image fluid={fluid} className=\"hero-img\" />\n      </div>\n    </header>\n  );\n};\n\nexport default Hero;\n","import React from \"react\"\nimport { FaCode, FaAdobe, FaGithub } from \"react-icons/fa\"\nexport default [\n  {\n    id: 1,\n    icon: <FaCode className=\"service-icon\" />,\n    title: \"web development\",\n    text: `React, Apollo GraphQL, Relay, JavaScript, CSS, HTML, Cypress, Jest`,\n  },\n  {\n    id: 2,\n    icon: <FaGithub className=\"service-icon\" />,\n    title: \"software development\",\n    text: `SCRUM Master, Splunk, Jenkins, Github, Docker, Jira`,\n  },\n  {\n    id: 3,\n    icon: <FaAdobe className=\"service-icon\" />,\n    title: \"technology\",\n    text: `Windows, MacOS, Linux, Adobe Lightroom, Adobe Photoshop`,\n  },\n]\n","import React from \"react\"\nimport Title from \"./Title\"\nimport services from \"../constants/services\"\nconst Services = () => {\n  return <section className='section bg-grey'>\n    <Title title='Skills' />\n    <div className='section-center services-center'>\n      {services.map(service => {\n        const { id, icon, title, text } = service;\n        \n        return <article key={id} className='service'>\n          {icon}\n          <h4>{title}</h4>\n          <div className=\"underline\" />\n          <p>{text}</p>\n        </article>\n      })}\n    </div>\n  </section>\n}\n\nexport default Services\n","import React, { useState } from \"react\";\nimport Title from \"./Title\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { Link } from \"gatsby\";\n\nconst query = graphql`\n  {\n    allStrapiJobs(sort: { order: DESC, fields: id }) {\n      nodes {\n        date\n        company\n        desc {\n          id\n          name\n        }\n        strapiId\n        position\n      }\n    }\n  }\n`;\n\nconst Jobs = () => {\n  const data = useStaticQuery(query);\n  const {\n    allStrapiJobs: { nodes: jobs },\n  } = data;\n  const [value, setValue] = useState(0);\n  const { company, position, date, desc } = jobs[value];\n\n  return (\n    <section className=\"section jobs\">\n      <Title title=\"experience\" />\n      <div className=\"jobs-center\">\n        <div className=\"btn-container\">\n          {jobs.map((job, index) => {\n            return (\n              <button\n                key={job.strapiId}\n                onClick={() => setValue(index)}\n                className={`job-btn ${index === value && \"active-btn\"}`}\n              >\n                {job.company}\n              </button>\n            );\n          })}\n        </div>\n        <article className=\"job-info\">\n          <h3>{position}</h3>\n          <h4>{company}</h4>\n          <p className=\"job-date\">{date}</p>\n          {desc.map((item) => {\n            return (\n              <div key={item.id} className=\"job-desc\">\n                <FaAngleDoubleRight className=\"job-icon\" />\n                <p>{item.name}</p>\n              </div>\n            );\n          })}\n        </article>\n      </div>\n      <Link to=\"/about\" className=\"btn center-btn\">\n        More info\n      </Link>\n    </section>\n  );\n};\n\nexport default Jobs;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Hero from \"../components/Hero\";\nimport Services from \"../components/Services\";\nimport Jobs from \"../components/Jobs\";\nimport Projects from \"../components/Projects\";\nimport Blogs from \"../components/Blogs\";\nimport SEO from '../components/SEO';\n\nexport default ({ data }) => {\n  const {\n    allStrapiProjects: { nodes: projects },\n    allStrapiBlogs: { nodes: blogs }\n  } = data;\n\n  return (\n    <Layout>\n      <SEO title='Home' description='this is the home page' />\n      <Hero />\n      <Services />\n      <Jobs />\n      <Projects projects={projects} title=\"featured projects\" showLink />\n      <Blogs blogs={blogs} title=\"my interests\" showLink />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  {\n    allStrapiProjects(filter: { featured: { eq: true } }) {\n      nodes {\n        github\n        id\n        title\n        stack {\n          id\n          title\n        }\n        description\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    allStrapiBlogs(sort: {order: DESC, fields: date}, limit: 3) {\n      nodes {\n        slug\n        date(formatString: \"MMMM Do, YYYY\")\n        id\n        title\n        category\n        desc\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nconst Blog = ({ id, title, image, slug, desc }) => {\n  return <Link to={`/blogs/${slug}`} className='blog' key={id}>\n    <article>\n      <Image fluid={image.childImageSharp.fluid} className='blog-img' />\n      <div className=\"blog-card\">\n        <h4>{title}</h4>\n        <p>{desc}</p>\n      </div>\n    </article>\n  </Link>\n}\n\nBlog.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n  slug: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired\n}\n\nexport default Blog\n","import React from \"react\"\nimport PropTypes from \"prop-types\";\nimport Title from \"./Title\"\nimport Blog from \"./Blog\"\n\nexport const Blogs = ({ blogs, title }) => {\n  return <section className='section'>\n    <Title title={title} />\n    <div className='section-center blogs-center'>\n      {blogs.map(blog => {\n        return <Blog key={blog.id} {...blog} />\n      })}\n    </div>\n  </section>\n};\n\nBlogs.propTypes = {\n  blogs: PropTypes.arrayOf(PropTypes.object).isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default Blogs\n"],"sourceRoot":""}