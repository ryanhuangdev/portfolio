{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js"],"names":["query","ProjectsPage","projects","data","allStrapiProjects","nodes","title","description","Project","github","stack","url","image","index","className","fluid","childImageSharp","map","item","key","id","href","Projects","showLink","Title","project","to"],"mappings":"6FAAA,0GAmBaA,EAAK,YAwBHC,UArCM,SAAC,GAIf,IAFyBC,EAE1B,EAHJC,KACEC,kBAAqBC,MAGvB,OAAO,kBAAC,IAAD,KACL,kBAAC,IAAD,CAAKC,MAAM,WAAWC,YAAY,gBAClC,iCACE,kBAAC,IAAD,CAAUL,SAAUA,EAAUI,MAAM,qB,kHC0B3BE,EApCC,SAAC,GAA8D,IAA5DD,EAA2D,EAA3DA,YAAaD,EAA8C,EAA9CA,MAAOG,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAChE,OACE,6BAASC,UAAU,WACjB,kBAAC,IAAD,CAAOC,MAAOH,EAAMI,gBAAgBD,MAAOD,UAAU,gBACrD,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,kBAAhB,IAAmCD,EAAQ,EAA3C,KACA,4BAAKP,GACL,uBAAGQ,UAAU,gBAAgBP,GAC7B,yBAAKO,UAAU,iBACZJ,EAAMO,KAAI,SAACC,GACV,OAAO,0BAAMC,IAAKD,EAAKE,IAAKF,EAAKZ,WAGrC,yBAAKQ,UAAU,iBACb,uBAAGO,KAAMZ,GACP,kBAAC,IAAD,CAAgBK,UAAU,kBAE5B,uBAAGO,KAAMV,GACP,kBAAC,IAAD,CAAeG,UAAU,sB,YCQtBQ,IAxBE,SAAC,GAAmC,IAAjCpB,EAAgC,EAAhCA,SAAUI,EAAsB,EAAtBA,MAAOiB,EAAe,EAAfA,SACnC,OACE,6BAAST,UAAU,oBACjB,kBAACU,EAAA,EAAD,CAAOlB,MAAOA,IACd,yBAAKQ,UAAU,kCACZZ,EAASe,KAAI,SAACQ,EAASZ,GACtB,OAAO,kBAAC,EAAD,eAASM,IAAKM,EAAQL,GAAIP,MAAOA,GAAWY,QAGtDF,GACC,kBAAC,IAAD,CAAMG,GAAG,YAAYZ,UAAU,kBAA/B","file":"component---src-pages-projects-js-f4be47a9cb0ba604cb92.js","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport { graphql } from \"gatsby\";\nimport Projects from \"../components/Projects\";\nimport SEO from \"../components/SEO\";\n\nconst ProjectsPage = ({\n  data: {\n    allStrapiProjects: { nodes: projects },\n  },\n}) => {\n  return <Layout>\n    <SEO title=\"Projects\" description=\"my projects\" />\n    <section>\n      <Projects projects={projects} title='all projects' />\n    </section>\n  </Layout>\n};\n\nexport const query = graphql`\n  {\n    allStrapiProjects(sort: {order: DESC, fields: id}) {\n      nodes {\n        github\n        id\n        title\n        stack {\n          id\n          title\n        }\n        description\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ProjectsPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Image from \"gatsby-image\";\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\";\nconst Project = ({ description, title, github, stack, url, image, index }) => {\n  return (\n    <article className=\"project\">\n      <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />\n      <div className=\"project-info\">\n        <span className=\"project-number\">0{index + 1}.</span>\n        <h3>{title}</h3>\n        <p className=\"project-desc\">{description}</p>\n        <div className=\"project-stack\">\n          {stack.map((item) => {\n            return <span key={item.id}>{item.title}</span>;\n          })}\n        </div>\n        <div className=\"project-links\">\n          <a href={github}>\n            <FaGithubSquare className='project-icon' />\n          </a>\n          <a href={url}>\n            <FaShareSquare className='project-icon' />\n          </a>\n        </div>\n      </div>\n    </article>\n  );\n};\n\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  github: PropTypes.string.isRequired,\n  stack: PropTypes.arrayOf(PropTypes.object).isRequired,\n  url: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired\n};\n\nexport default Project;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Title from \"./Title\";\nimport Project from \"./Project\";\nimport { Link } from \"gatsby\";\n\nconst Projects = ({ projects, title, showLink }) => {\n  return (\n    <section className=\"section projects\">\n      <Title title={title} />\n      <div className=\"section-center projects-center\">\n        {projects.map((project, index) => {\n          return <Project key={project.id} index={index} {...project} />\n        })}\n      </div>\n      {showLink && (\n        <Link to=\"/projects\" className=\"btn center-btn\">\n          Projects\n        </Link>\n      )}\n    </section>\n  );\n};\n\nProjects.propTypes = {\n  projects: PropTypes.arrayOf(PropTypes.object).isRequired,\n  title: PropTypes.string.isRequired,\n  showLink: PropTypes.bool.isRequired\n};\n\nexport default Projects;\n"],"sourceRoot":""}